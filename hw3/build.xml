<?xml version="1.0" encoding="UTF-8"?>
<project name="homework1" default="dist" basedir=".">

  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
	
	<property name="host" value="localhost"/>
	<property name="computerPort" value="1098"/>

  
  <!-- codebase properties --> 
  <property name="file_codebase" location="/home/tor/workspace/hw3/codebase" />
  <property name="web_codebase" value="http://www.cs.ucsb.edu/~torgel/290b/hw3/src/" />

  <target name="compile" description="compile the source">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>  
  
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"/>
  </target>

  <target name="dist" depends="compile" description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Make system jar file -->
    <jar jarfile="${dist}/system.jar" basedir="${build}" includes="system/** api/**"/>
    
    <!-- Make client jar file -->
    <jar jarfile="${dist}/client.jar" basedir="${build}" includes="client/** api/** tasks/**"/>
    
    <!-- Copy client's task classes to client's codebase --> 
    <mkdir dir="${file_codebase}"/>
    <copy todir="${file_codebase}">
      <fileset dir="${build}"/>
    </copy>

  	
  </target>
  
  <target name="javadoc" description="create javadocs">
  	<javadoc packagenames="tasks.*,api.*" sourcepath="${src}" destdir="documents/javadoc" />
  </target>
  
  <target name="computer" depends="dist" description="Start a computer" >
  	<java classname="system.ComputerImpl" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <arg value="${host}"/>
  	  <arg value="${computerPort}"/>
  	  <classpath>
  	    <pathelement location="dist/system.jar"/>
  	  </classpath>
  	</java>
  </target>  
	
  <target name="space" depends="dist" description="Start a space" >
  	<java classname="system.SpaceImpl" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <classpath>
  	    <pathelement location="dist/system.jar"/>
  	  </classpath>
  	</java>
  </target>  
  
  <target name="mandelbrot" depends="dist" description="Run a Mandelbrot client" >
  	<java classname="client.MandelbrotClient" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <arg value="${host}"/>
  	  <classpath>
  	    <pathelement location="dist/client.jar"/>
  	  </classpath>
  	</java>
  </target>
	
<target name="mandelbrotStandalone" depends="dist" description="Run a Mandelbrot and system in one JVM" >
  	<java classname="client.MandelbrotClient" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <arg value="${host}"/>
  	  <arg value="standalone"/>
  	  <classpath>
  	    <pathelement location="dist/client.jar"/>
  	    <pathelement location="dist/system.jar"/>
  	  </classpath>
  	</java>
  </target>
	
  <target name="tsp" depends="dist" description="Run a TSP client" >
  	<java classname="client.TspClient" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <arg value="${host}"/>
  	  <classpath>
  	    <pathelement location="dist/client.jar"/>
  	  </classpath>
  	</java>
  </target>

	<target name="tspStandalone" depends="dist" description="Run a TSP and system in one JVM" >
	  	<java classname="client.TspClient" fork="true">
	  	  <jvmarg value="-Djava.rmi.server.codebase=${web_codebase}"/>
	  	  <jvmarg value="-Djava.security.policy=policy"/>
	  	  <arg value="localhost"/>
	  	  <arg value="standalone"/>
	  	  <classpath>
	  	    <pathelement location="dist/client.jar"/>
	  	    <pathelement location="dist/system.jar"/>
	  	  </classpath>
	  	</java>
	  </target>
  <target name="clean" description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${file_codebase}/tasks"/>
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
  
</project>

